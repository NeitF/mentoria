// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241123222253_setup-inicial")]
    partial class setupinicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("ClassLibrary1.Domain.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("AUTOR", (string)null);
                });

            modelBuilder.Entity("ClassLibrary1.Domain.Editora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("EDITORA", (string)null);
                });

            modelBuilder.Entity("ClassLibrary1.Domain.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<int>("AnoPublicacao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ANO_PUBLICACAO");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("TEXT")
                        .HasColumnName("AUTOR_ID");

                    b.Property<Guid>("EditoraId")
                        .HasColumnType("TEXT")
                        .HasColumnName("EDITORA_ID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("EditoraId");

                    b.ToTable("LIVRO", (string)null);
                });

            modelBuilder.Entity("ClassLibrary1.Domain.Livro", b =>
                {
                    b.HasOne("ClassLibrary1.Domain.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Domain.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Editora");
                });

            modelBuilder.Entity("ClassLibrary1.Domain.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("ClassLibrary1.Domain.Editora", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
